#ifndef FLASH_EEPROM_H
#define FLASH_EEPROM_H


//Flash reprograming example https://github.com/raspberrypi/pico-examples/blob/master/flash/program/flash_program.c
//https://www.makermatrix.com/blog/read-and-write-data-with-the-pi-pico-onboard-flash/

#define FLASH_DATA_SIZE (FLASH_PAGE_SIZE * 2)
#define FLASH_TARGET_OFFSET (FLASH_DATA_SIZE * 1024)
const uint8_t *flash_target_contents = (const uint8_t *) (XIP_BASE + FLASH_TARGET_OFFSET);

//256 bytes for the Mobile Adapter GB config and 256 bytes to WiFi Config and other stuffs
unsigned char dummy_config[FLASH_DATA_SIZE] = {
    // Mobile Adapter GB config
    0x4D, 0x41, 0x01, 0x00, 0xD2, 0xC4, 0x03, 0xB7, 0xD2, 0x8D, 0x70, 0xA3,	0x67, 0x39, 0x38, 0x37,
    0x32, 0x37, 0x38, 0x31, 0x38, 0x33, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7A, 0x65, 0x6E, 0x61,
    0x72, 0x6F, 0x72, 0x39, 0x40, 0x73, 0x72, 0x76, 0x31, 0x2E, 0x64, 0x69,	0x6F, 0x6E, 0x2E, 0x6E,
    0x65, 0x2E, 0x6A, 0x70, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x6D, 0x61, 0x69, 0x6C, 0x2E, 0x73,
    0x72, 0x76, 0x31, 0x2E,	0x64, 0x69, 0x6F, 0x6E, 0x2E, 0x6E, 0x65, 0x2E, 0x6A, 0x70, 0x70, 0x6F,
    0x70, 0x2E, 0x73, 0x72, 0x76, 0x31, 0x2E, 0x64, 0x69, 0x6F, 0x6E, 0x2E,	0x6E, 0x65, 0x2E, 0x6A,
    0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0xA9, 0x67,	0x7F, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x44, 0x49,
    0x4F, 0x4E, 0x20, 0x50,	0x44, 0x43, 0x2F, 0x43, 0x44, 0x4D, 0x41, 0x4F, 0x4E, 0x45, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF,	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x35, 0x62,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

    //WiFi Config and other stuffs
	0x53, 0x53, 0x49, 0x44, 0x57, 0x69, 0x46, 0x69, 0x5F, 0x4E, 0x65, 0x74, 0x77, 0x6F, 0x72, 0x6B,	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x50, 0x41, 0x53, 0x53, 0x50, 0x40, 0x24, 0x24,	0x77, 0x30, 0x72, 0x64, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

void FormatFlashConfig(){
    printf("Erasing target region... ");
    flash_range_erase(FLASH_TARGET_OFFSET, FLASH_SECTOR_SIZE);
    //uint8_t data_zero[FLASH_DATA_SIZE];
    //memset(data_zero,0x00,sizeof(data_zero));
    //flash_range_program(FLASH_TARGET_OFFSET, data_zero, FLASH_DATA_SIZE);  
    //flash_range_program(FLASH_TARGET_OFFSET, dummy_config, FLASH_DATA_SIZE);
    printf("Done.\n");
}

//Read flash memory and set the configs
// 0 = No config
// 1 = Have only Mobile Adapter Config
// 2 = Have Mobile Adapter and Wifi Config
// 3 = Have only WiFi Config
uint8_t ReadFlashConfig(uint8_t * buff){
    printf("Reading the target region... ");
    uint8_t data_return = 0;
    char checkWiFi[5];
    memcpy(buff,flash_target_contents,FLASH_DATA_SIZE);    
    if((char)buff[0] == 0x4D && (char)buff[1] == 0x41){
        data_return = 1;
    }

    sprintf(checkWiFi,"%c%c%c%c",(char)buff[256],(char)buff[257],(char)buff[258],(char)buff[259]);
    if(strcmp(checkWiFi,"SSID") == 0){
        sprintf(checkWiFi,"%c%c%c%c",(char)buff[288],(char)buff[289],(char)buff[290],(char)buff[291]);
        if(strcmp(checkWiFi,"PASS") == 0){
            if(data_return == 1){
                data_return = 2;
            }else{
                data_return = 3;
                //FormatFlashConfig();
            }
        }
    }
    printf("Done.\n");
    return data_return;
}

void SaveFlashConfig(uint8_t * buff){
    printf("Programming target region... ");
    //FormatFlashConfig();
    //flash_range_program(FLASH_TARGET_OFFSET, dummy_config, FLASH_DATA_SIZE);
    flash_range_program(FLASH_TARGET_OFFSET, buff, FLASH_DATA_SIZE);
    printf("Done.\n");
}
#endif
